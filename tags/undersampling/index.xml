<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>undersampling on Just data things</title>
    <link>https://3inar.github.io/tags/undersampling/</link>
    <description>Recent content in undersampling on Just data things</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© {year}</copyright>
    <lastBuildDate>Sun, 09 Apr 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://3inar.github.io/tags/undersampling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding undersampling</title>
      <link>https://3inar.github.io/blog/2017-04-09-undersampling/</link>
      <pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://3inar.github.io/blog/2017-04-09-undersampling/</guid>
      <description>I really like Frank Harrell’s blog. He writes all kinds of useful things, and as I am working in the classification/predition area I was particularly interested in his two posts about classification vs. prediction and improper scoring rules. After posting links to these in the lab Slack I got some questions that forced me to do some thinking. Why not undersample the majority class?
Possibly a motivation So the argument for balancing unbalanced classes seems to stem from the use of classification accuracy (= fraction predictions where the predicted class was correct) to evaluate classifiers: if \(.</description>
    </item>
    
  </channel>
</rss>
